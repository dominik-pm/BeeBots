import { fillStatus, orderSide, orderType } from "./phemexhandler"

declare module 'phemexapi'

export declare type PhemexRequestOptions = {
    isLivenet: boolean,
    apiKey: string,
    secret: string
}

export declare type PhemexAccountInfo = {
    account: {
        userID: number,
        accountId: number,
        currency: string,
        accountBalanceEv: number,
        totalUsedBalanceEv: number,
        bonusBalanceEv: number
    },
    positions: PhemexAccountPosition[]
}
export declare type PhemexAccountPosition = {
    userID: number,
    accountID: number,
    symbol: string,
    currency: string,
    side: orderSide,
    positionStatus: Normal,
    crossMargin: false,
    leverageEr: number,
    leverage: number,
    initMarginReqEr: number,
    initMarginReq: number,
    maintMarginReqEr: number,
    maintMarginReq: number,
    riskLimitEv: number,
    riskLimit: number,
    size: number,
    value: number,
    valueEv: number,
    avgEntryPriceEp: number,
    avgEntryPrice: number,
    posCostEv: number,
    posCost: number,
    assignedPosBalanceEv: number,
    assignedPosBalance: number,
    bankruptCommEv: number,
    bankruptComm: number,
    bankruptPriceEp: number,
    bankruptPrice: number,
    positionMarginEv: number,
    positionMargin: number,
    liquidationPriceEp: number,
    liquidationPrice: number,
    deleveragePercentileEr: number,
    deleveragePercentile: number,
    buyValueToCostEr: number,
    buyValueToCost: number,
    sellValueToCostEr: number,
    sellValueToCost: number,
    markPriceEp: number,
    markPrice: number,
    markValueEv: number,
    markValue: null,
    unRealisedPosLossEv: number,
    unRealisedPosLoss: null,
    estimatedOrdLossEv: number,
    estimatedOrdLoss: number,
    usedBalanceEv: number,
    usedBalance: number,
    takeProfitEp: number,
    takeProfit: null,
    stopLossEp: number,
    stopLoss: null,
    cumClosedPnlEv: number,
    cumFundingFeeEv: number,
    cumTransactFeeEv: number,
    realisedPnlEv: number,
    realisedPnl: null | number,
    cumRealisedPnlEv: number,
    cumRealisedPnl: null | number,
    transactTimeNs: number,
    takerFeeRateEr: number,
    makerFeeRateEr: number,
    term: number,
    lastTermEndTimeNs: number,
    lastFundingTimeNs: number,
    curTermRealisedPnlEv: number,
    execSeq: number
}
export declare type PhemexOpenOrder = {
    bizError: number,
    orderID: string,
    clOrdID: string,
    symbol: string,
    side: orderSide,
    actionTimeNs: number,
    transactTimeNs: number,
    orderType: orderType,
    priceEp: number,
    price: number,
    orderQty: number,
    displayQty: number,
    timeInForce: string,
    reduceOnly: false,
    closedPnlEv: number,
    closedPnl: number,
    closedSize: number,
    cumQty: number,
    cumValueEv: number,
    cumValue: number,
    leavesQty: number,
    leavesValueEv: number,
    leavesValue: number,
    stopDirection: string,
    stopPxEp: number,
    stopPx: number,
    trigger: string,
    pegOffsetValueEp: number,
    execStatus: string,
    pegPriceType: string,
    ordStatus: string
}
export declare type PhemexClosedTrade = {
    transactTimeNs: number,
    symbol: string,
    currency: string,
    action: string,
    side: orderSide,
    tradeType: string,
    execQty: number,
    execPriceEp: number,
    orderQty: number,
    priceEp: number,
    execValueEv: number,
    feeRateEr: number,
    execFeeEv: number,
    closedSize: number,
    closedPnlEv: number,
    ordType: orderType,
    execID: string,
    orderID: string,
    clOrdID: string,
    execStatus: fillStatus
}